# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"setup_logger": "00_core.logging.ipynb",
         "Registry.__doc__": "00a_core.structures.ipynb",
         "Registry.register.__doc__": "00a_core.structures.ipynb",
         "Registry.get.__doc__": "00a_core.structures.ipynb",
         "ACTIVATION_REGISTRY": "00a_core.structures.ipynb",
         "ACTIVATION_REGISTRY.__doc__": "00a_core.structures.ipynb",
         "IMAGE_CLASSIFICATION_TRANSFORMS": "00a_core.structures.ipynb",
         "IMAGE_CLASSIFICATION_TRANSFORMS.__doc__": "00a_core.structures.ipynb",
         "IMAGE_CLASSIFIER_BACKBONES": "00a_core.structures.ipynb",
         "IMAGE_CLASSIFIER_BACKBONES.__doc__": "00a_core.structures.ipynb",
         "IMAGE_CLASSIFIER_HEADS": "00a_core.structures.ipynb",
         "IMAGE_CLASSIFIER_HEADS.__doc__": "00a_core.structures.ipynb",
         "META_ARCH_REGISTRY": "00a_core.structures.ipynb",
         "META_ARCH_REGISTRY.__doc__": "00a_core.structures.ipynb",
         "DatasetCatalog": "00a_core.structures.ipynb",
         "subplots": "00b_core.visualize.ipynb",
         "show_image": "00b_core.visualize.ipynb",
         "show_titled_image": "00b_core.visualize.ipynb",
         "show_images": "00b_core.visualize.ipynb",
         "imshow_tensors": "00b_core.visualize.ipynb",
         "norm_types": "01_core.nn.utils.ipynb",
         "bn_types": "01_core.nn.utils.ipynb",
         "init_default": "01_core.nn.utils.ipynb",
         "cond_init": "01_core.nn.utils.ipynb",
         "apply_leaf": "01_core.nn.utils.ipynb",
         "apply_init": "01_core.nn.utils.ipynb",
         "set_bn_eval": "01_core.nn.utils.ipynb",
         "trainable_params": "01_core.nn.utils.ipynb",
         "params": "01_core.nn.utils.ipynb",
         "maybe_convert_to_onehot": "01_core.nn.utils.ipynb",
         "worker_init_fn": "01_core.nn.utils.ipynb",
         "LabelSmoothingCrossEntropy": "01a_core.nn.losses.ipynb",
         "BinarySigmoidFocalLoss": "01a_core.nn.losses.ipynb",
         "FocalLoss": "01a_core.nn.losses.ipynb",
         "Ranger": "01b_core.nn.optim.optimizers.ipynb",
         "RangerGC": "01b_core.nn.optim.optimizers.ipynb",
         "SGDP": "01b_core.nn.optim.optimizers.ipynb",
         "AdamP": "01b_core.nn.optim.optimizers.ipynb",
         "LRMultiplier": "01c_core.nn.optim.lr_schedulers.ipynb",
         "FlatCosScheduler": "01c_core.nn.optim.lr_schedulers.ipynb",
         "WarmupParamScheduler": "01c_core.nn.optim.lr_schedulers.ipynb",
         "WarmupCosineLR": "01c_core.nn.optim.lr_schedulers.ipynb",
         "WarmupLinearLR": "01c_core.nn.optim.lr_schedulers.ipynb",
         "WarmupConstantLR": "01c_core.nn.optim.lr_schedulers.ipynb",
         "create_optimizer": "02_config.optimizers.ipynb",
         "OptimizerParams": "02_config.optimizers.ipynb",
         "SGDConfig": "02_config.optimizers.ipynb",
         "AdamConfig": "02_config.optimizers.ipynb",
         "AdamWConfig": "02_config.optimizers.ipynb",
         "RMSpropTFConfig": "02_config.optimizers.ipynb",
         "RangerConfig": "02_config.optimizers.ipynb",
         "RangerGCConfig": "02_config.optimizers.ipynb",
         "SGDPConfig": "02_config.optimizers.ipynb",
         "AdamPConfig": "02_config.optimizers.ipynb",
         "SchedulerParams": "02a_config.schedulers.ipynb",
         "FlatCosSchedulerConfig": "02a_config.schedulers.ipynb",
         "WarmupCosineLRConfig": "02a_config.schedulers.ipynb",
         "WarmupLinearLRConfig": "02a_config.schedulers.ipynb",
         "WarmupConstantLRConfig": "02a_config.schedulers.ipynb",
         "CosineAnnealingWarmRestartsConfig": "02a_config.schedulers.ipynb",
         "ReduceLROnPlateauConfig": "02a_config.schedulers.ipynb",
         "OneCycleLRConfig": "02a_config.schedulers.ipynb",
         "MultiStepLRConfig": "02a_config.schedulers.ipynb",
         "StepLRConfig": "02a_config.schedulers.ipynb",
         "OptimizationConfig": "02b_config.common.ipynb",
         "DataLoaderConfig": "02b_config.common.ipynb",
         "DatasetsConfig": "02b_config.common.ipynb",
         "BaseGaleConfig": "02b_config.common.ipynb",
         "Configurable": "03_core.classes.ipynb",
         "GaleModule": "03_core.classes.ipynb",
         "OptimSchedBuilder": "03_core.classes.ipynb",
         "OptimSchedBuilder.prepare_optimization_config": "03_core.classes.ipynb",
         "OptimSchedBuilder.build_optimizer": "03_core.classes.ipynb",
         "OptimSchedBuilder.build_lr_scheduler": "03_core.classes.ipynb",
         "GaleTask": "03_core.classes.ipynb",
         "GaleTask.shared_step": "03_core.classes.ipynb",
         "GaleTask.training_step": "03_core.classes.ipynb",
         "GaleTask.validation_step": "03_core.classes.ipynb",
         "GaleTask.test_step": "03_core.classes.ipynb",
         "GaleTask.setup_optimization": "03_core.classes.ipynb",
         "GaleTask.configure_optimizers": "03_core.classes.ipynb",
         "has_pool_type": "04_classification.modelling.backbones.ipynb",
         "prepare_backbone": "04_classification.modelling.backbones.ipynb",
         "filter_weight_decay": "04_classification.modelling.backbones.ipynb",
         "TimmBackboneBase": "04_classification.modelling.backbones.ipynb",
         "TimmBackboneBaseConfig": "04_classification.modelling.backbones.ipynb",
         "logger": "05_collections.pandas.ipynb",
         "folder2df": "05_collections.pandas.ipynb",
         "split_dataframe_into_stratified_folds": "05_collections.pandas.ipynb",
         "get_dataframe_fold": "05_collections.pandas.ipynb",
         "get_dataset_labeling": "05_collections.pandas.ipynb",
         "dataframe_labels_2_int": "05_collections.pandas.ipynb",
         "split_dataframe_train_test": "05_collections.pandas.ipynb",
         "format_time": "06a_collections.callbacks.notebook.ipynb",
         "html_progress_bar": "06a_collections.callbacks.notebook.ipynb",
         "text_to_html_table": "06a_collections.callbacks.notebook.ipynb",
         "NotebookProgressBar": "06a_collections.callbacks.notebook.ipynb",
         "NotebookTrainingTracker": "06a_collections.callbacks.notebook.ipynb",
         "NotebookProgressCallback": "06a_collections.callbacks.notebook.ipynb",
         "log": "06b_collections.callbacks.ema.ipynb",
         "EMACallback": "06b_collections.callbacks.ema.ipynb"}

modules = ["core/logging.py",
           "core/structures.py",
           "core/visualize.py",
           "core/nn/utils.py",
           "core/nn/losses.py",
           "core/nn/optim/optimizers.py",
           "core/nn/optim/lr_schedulers.py",
           "config/optimizers.py",
           "config/schedulers.py",
           "config/common.py",
           "core/classes.py",
           "classification/modelling/backbones.py",
           "collections/pandas.py",
           "collections/callbacks/notebook.py",
           "collections/callbacks/ema.py"]

doc_url = "https://benihime91.github.io/gale/"

git_url = "https://github.com/benihime91/gale/tree/master/"

def custom_doc_links(name): return None
