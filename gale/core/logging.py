# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/00_core.logging.ipynb (unless otherwise specified).

__all__ = ['wrapper', 'setup_logger']

# Cell
import logging
import sys

import loguru
from fastcore.all import delegates
import functools
from termcolor import colored

# Cell
def wrapper(record):
    """
    Update logging records
    """
    prefix = ""
    log = record["message"]

    if record["level"].name == "WARNING":
        prefix = colored("WARNING", "red", attrs=["blink"])
        prefix = prefix + ":"
    elif record["level"].name == "ERROR" or record["level"].name == "CRITICAL":
        prefix = colored("ERROR", "red", attrs=["blink", "underline"])
        prefix = prefix + ":"
    else:
        pass
    record["message"] = prefix + " " + log

# Cell
@delegates(loguru.logger.add)
def setup_logger(
    sink=sys.stdout,
    level=logging.INFO,
    format="<green>[{time:MM/DD HH:mm:ss} {name}]:</green> {message}",
    colorize=True,
    **kwargs
):
    "Default logger for the Gale Library"
    logger = loguru.logger
    logger.remove()
    logger.add(sink, level=level, format=format, colorize=colorize, **kwargs)
    logger = logger.patch(lambda record: wrapper(record))
    return logger